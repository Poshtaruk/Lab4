<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        PwAU/9k=
</value>
  </data>
</root>